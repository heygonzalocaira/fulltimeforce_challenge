name: fulltimeforce_challenge

concurrency:
  group: $-$
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - dev


jobs:
  build:
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}

    runs-on: ${{inputs.runs_on}}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{inputs.flutter_version}}
          channel: ${{inputs.flutter_channel}}
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: 🤫 Set SSH Key
        env:
          ssh_key: ${{secrets.ssh_key}}
        if: env.ssh_key != null
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{secrets.ssh_key}}

      - name: 📦 Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good packages get --recursive --ignore=${{inputs.package_get_excludes}}

      - name: ⚙️ Run Setup
        if: "${{inputs.setup != ''}}"
        run: ${{inputs.setup}}

      - name: ✨ Check Formatting
        run: dart format --line-length ${{inputs.format_line_length}} --set-exit-if-changed ${{inputs.format_directories}}

      - name: 🕵️ Analyze
        run: flutter analyze ${{inputs.analyze_directories}}

      - name: 🧪 Run Tests
        run: very_good test -j ${{inputs.concurrency}} ${{(inputs.test_recursion && '--recursive') || ''}} ${{(inputs.test_optimization && '--optimization') || '--no-optimization'}} --coverage --test-randomize-ordering-seed random


